@model ContractMonthlyClaimSystem.Models.ViewModels.ClaimViewModel
@{
    ViewData["Title"] = $"Claim Details - #{Model.ClaimId}";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-file-alt me-2"></i>Claim Details - #@Model.ClaimId
    </h2>
    <div>
        <span class="badge bg-@GetStatusBadgeClass(Model.Status) fs-6">
            @Model.Status
        </span>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5><i class="fas fa-info-circle me-2"></i>Claim Information</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-4">Claim ID:</dt>
                            <dd class="col-8">@Model.ClaimId</dd>

                            <dt class="col-4">Lecturer:</dt>
                            <dd class="col-8">@Model.LecturerName</dd>

                            <dt class="col-4">Hours Worked:</dt>
                            <dd class="col-8">@Model.HoursWorked.ToString("F2") hours</dd>

                            <dt class="col-4">Hourly Rate:</dt>
                            <dd class="col-8">@Model.HourlyRate.ToString("C")</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-4">Total Amount:</dt>
                            <dd class="col-8"><strong class="text-success">@Model.TotalAmount.ToString("C")</strong></dd>

                            <dt class="col-4">Status:</dt>
                            <dd class="col-8">
                                <span class="badge bg-@GetStatusBadgeClass(Model.Status)">
                                    @Model.Status
                                </span>
                            </dd>

                            <dt class="col-4">Claim Period:</dt>
                            <dd class="col-8">@Model.ClaimPeriod.ToString("MMMM yyyy")</dd>

                            <dt class="col-4">Submitted:</dt>
                            <dd class="col-8">@Model.SubmissionDate.ToString("yyyy-MM-dd HH:mm")</dd>
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <hr>
                    <h6><i class="fas fa-align-left me-2"></i>Description</h6>
                    <p class="mb-0">@Model.Description</p>
                }

                @if (!string.IsNullOrEmpty(Model.Comments))
                {
                    <hr>
                    <h6><i class="fas fa-comments me-2"></i>Comments</h6>
                    <div class="alert alert-info">
                        @Model.Comments
                    </div>
                }
            </div>
        </div>

        @if (Model.Approvals.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-history me-2"></i>Approval History</h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        @foreach (var approval in Model.Approvals.OrderBy(a => a.ApprovalDate))
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-@(approval.Status == "Approved" ? "success" : "danger")">
                                    <i class="fas fa-@(approval.Status == "Approved" ? "check" : "times") text-white"></i>
                                </div>
                                <div class="timeline-content">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <h6 class="mb-1">@approval.ApproverName</h6>
                                            <small class="text-muted">@approval.ApproverRole</small>
                                        </div>
                                        <div class="text-end">
                                            <span class="badge bg-@(approval.Status == "Approved" ? "success" : "danger")">
                                                @approval.Status
                                            </span>
                                            <br>
                                            <small class="text-muted">@approval.ApprovalDate?.ToString("yyyy-MM-dd HH:mm")</small>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(approval.Comments))
                                    {
                                        <p class="mb-0 mt-2">@approval.Comments</p>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5><i class="fas fa-cogs me-2"></i>Actions</h5>
            </div>
            <div class="card-body">
                @if (User.IsInRole("Lecturer"))
                {
                    @if (Model.Status == "Draft")
                    {
                        <a href="@Url.Action("Edit", new { id = Model.ClaimId })" class="btn btn-primary w-100 mb-2">
                            <i class="fas fa-edit me-1"></i>Edit Claim
                        </a>
                    }
                }
                else if (Model.CanApprove)
                {
                    <a href="@Url.Action("Approve", new { id = Model.ClaimId })" class="btn btn-success w-100 mb-2">
                        <i class="fas fa-check me-1"></i>Approve Claim
                    </a>
                    <a href="@Url.Action("Reject", new { id = Model.ClaimId })" class="btn btn-danger w-100 mb-2">
                        <i class="fas fa-times me-1"></i>Reject Claim
                    </a>
                }

                <a href="@(User.IsInRole("Lecturer") ? Url.Action("Index") : Url.Action("Pending"))" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-arrow-left me-1"></i>Back to List
                </a>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-calculator me-2"></i>Calculation</h5>
            </div>
            <div class="card-body">
                <table class="table table-sm">
                    <tbody>
                        <tr>
                            <td>Hours Worked:</td>
                            <td class="text-end">@Model.HoursWorked.ToString("F2")</td>
                        </tr>
                        <tr>
                            <td>Hourly Rate:</td>
                            <td class="text-end">@Model.HourlyRate.ToString("C")</td>
                        </tr>
                        <tr class="table-success">
                            <td><strong>Total Amount:</strong></td>
                            <td class="text-end"><strong>@Model.TotalAmount.ToString("C")</strong></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Submitted" => "primary",
            "UnderReview" => "warning",
            "Approved" => "success",
            "Rejected" => "danger",
            "Paid" => "info",
            "Draft" => "secondary",
            _ => "secondary"
        };
    }
}

@section Styles {
    <style>
        .timeline {
            position: relative;
            padding-left: 2rem;
        }

            .timeline::before {
                content: '';
                position: absolute;
                left: 1rem;
                top: 0;
                bottom: 0;
                width: 2px;
                background-color: #dee2e6;
            }

        .timeline-item {
            position: relative;
            margin-bottom: 2rem;
        }

        .timeline-marker {
            position: absolute;
            left: -2rem;
            top: 0;
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .timeline-content {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
            border-left: 3px solid #dee2e6;
        }
    </style>
}